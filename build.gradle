buildscript {
    ext {
        ktor = '1.2.0-alpha-2'
        okhttp = '3.11.0'
        serialization = '0.11.0-1.3.30-eap-11'
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.30-eap-45'
    id 'kotlinx-serialization' version '1.3.30-eap-45'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

apply plugin: 'maven-publish'

version '1.0.0'
group 'com.algolia.algoliasearch'

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }
        compilations.test.kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    sourceSets {
        all {
            languageSettings {
                progressiveMode = true
            }
        }
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization"
                api "io.ktor:ktor-client:$ktor"
                api "io.ktor:ktor-client-logging:$ktor"
                api "io.ktor:ktor-client-core:$ktor"
                api "io.ktor:ktor-client-json:$ktor"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                api "io.ktor:ktor-client-okhttp:$ktor"
                api "io.ktor:ktor-client-core-jvm:$ktor"
                api "io.ktor:ktor-client-json-jvm:$ktor"
                api "io.ktor:ktor-client-logging-jvm:$ktor"
                api "com.squareup.okhttp3:okhttp:$okhttp"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "io.ktor:ktor-client-mock-jvm:$ktor"
            }
        }
//        jsMain {
//            dependencies {
//                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
//            }
//        }
//        jsTest {
//            dependencies {
//                implementation "org.jetbrains.kotlin:kotlin-test-js"
//            }
//        }
//        macosMain {
//            dependencies {
//                implementation "io.ktor:ktor-client-ios:$ktor"
//                implementation "io.ktor:ktor-client-core-ios:$ktor"
//                implementation "io.ktor:ktor-client-json-ios:$ktor"
//            }
//        }
//        macosTest {}
    }
}